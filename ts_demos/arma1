{
 "metadata": {
  "signature": "sha256:3695960b89cc79a714bc662ddf22b58cbd0abf383805b23bc709b8ecdb240230"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "id": "uqer_A0A6859F28BB4BA48",
     "metadata": {},
     "source": [
      "# ** \u6982\u8ff0**\n",
      "\n",
      "\u672c\u6587\u5c06\u627f\u63a5\u4e0a\u4e00\u7bc7\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u7684\u4ecb\u7ecd\uff0c\u91cd\u70b9\u4ecb\u7ecd\uff1a\n",
      "\n",
      "* ARMA\u6a21\u578b\n",
      "\n",
      "* ARIMA\u6a21\u578b"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_1D27B4F4F0234F998",
     "metadata": {},
     "source": [
      "# **\u4e00\u3001ARMA\u6a21\u578b**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_02CE17C3DBC146BC8",
     "metadata": {},
     "source": [
      "\u5728\u6709\u4e9b\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u9ad8\u9636\u7684AR\u6216MA\u6a21\u578b\u624d\u80fd\u5145\u5206\u5730\u63cf\u8ff0\u6570\u636e\u7684\u52a8\u6001\u7ed3\u6784\uff0c\u8fd9\u6837\u95ee\u9898\u4f1a\u53d8\u5f97\u5f88\u7e41\u7410\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e2a\u56f0\u96be\uff0c\u63d0\u51fa\u4e86\u81ea\u56de\u5f52\u6ed1\u52a8\u5e73\u5747(ARMA)\u6a21\u578b\u3002\n",
      "\n",
      "\u57fa\u672c\u601d\u60f3\u662f\u628aAR\u548cMA\u6a21\u578b\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f7f\u6240\u4f7f\u7528\u7684\u53c2\u6570\u4e2a\u6570\u4fdd\u6301\u5f88\u5c0f\u3002\n",
      "\n",
      "\u6a21\u578b\u7684\u5f62\u5f0f\u4e3a\uff1a$$ \\large r_t = \\phi_0 + \\sum_{i=1}^p\\phi_ir_{t-i} + a_t + \\sum_{i=1}^q\\theta_ia_{t-i} $$\n",
      "\n",
      "\u5176\u4e2d\uff0c{$a_t$}\u4e3a\u767d\u566a\u58f0\u5e8f\u5217\uff0cp\u548cq\u90fd\u662f\u975e\u8d1f\u6574\u6570\u3002**AR\u548cMA\u6a21\u578b\u90fd\u662fARMA(p,q)\u7684\u7279\u6b8a\u5f62\u5f0f**\u3002\n",
      "\n",
      "\u5229\u7528**\u5411\u540e\u63a8\u79fb\u7b97\u5b50$B$**\uff0c\u4e0a\u8ff0\u6a21\u578b\u53ef\u5199\u6210: $$ \\large (1-\\phi_1B - \\cdots -\\phi_pB^p)r_t = \\phi_0 + (1-\\theta_1B-\\cdots - \\theta_qB^q)a_t$$\n",
      "\n",
      "\uff08\u540e\u79fb\u7b97\u5b50$B$\uff0c\u5373**\u4e0a\u4e00\u65f6\u523b**\uff09"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_D4286BD14FD14C9B8",
     "metadata": {},
     "source": [
      "\u8fd9\u65f6\u5019\u6211\u4eec\u6c42$r_t$\u7684\u671f\u671b\uff0c\u5f97\u5230\uff1a$$ \\large E(r_t) = \\frac{\\phi_0}{1-\\phi_1-\\cdots - \\phi_p}$$\n",
      "\n",
      "\u548c\u4e0a\u671f\u6211\u4eec\u7684AR\u6a21\u578b\u4e00\u6a21\u4e00\u6837\u3002\u56e0\u6b64\u6709\u7740\u76f8\u540c\u7684\u7279\u5f81\u65b9\u7a0b\uff1a$$\\large 1 - \\phi_1x - \\phi_2x^2 - \\cdots -\\phi_px^p = 0$$\n",
      "\n",
      "### \u8be5\u65b9\u7a0b**\u6240\u6709\u89e3\u7684\u5012\u6570\u79f0\u4e3a\u8be5\u6a21\u578b\u7684\u7279\u5f81\u6839**\uff0c\u5982\u679c\u6240\u6709\u7684**\u7279\u5f81\u6839\u7684\u6a21\u90fd\u5c0f\u4e8e1**\uff0c\u5219\u8be5ARMA\u6a21\u578b\u662f\u5e73\u7a33\u7684\u3002\n",
      "\n",
      "\u6709\u4e00\u70b9\u5f88\u5173\u952e\uff1a**ARMA\u6a21\u578b\u7684\u5e94\u7528\u5bf9\u8c61\u5e94\u8be5\u4e3a\u5e73\u7a33\u5e8f\u5217 ** \u6211\u4eec\u4e0b\u9762\u7684\u6b65\u9aa4\u90fd\u662f\u5efa\u7acb\u5728\u5047\u8bbe\u539f\u5e8f\u5217\u5e73\u7a33\u7684\u6761\u4ef6\u4e0b\u7684"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_9A2BC2C2E7EC4F728",
     "metadata": {},
     "source": [
      "## **1.1 \u8bc6\u522bARMA\u6a21\u578b\u9636\u6b21**\n",
      "\n",
      "### **1.1.1 PACF\u3001ACF \u5224\u65ad\u6a21\u578b\u9636\u6b21**\n",
      "\n",
      "\u6211\u4eec\u901a\u8fc7\u89c2\u5bdfPACF\u548cACF\u622a\u5c3e\uff0c\u5206\u522b\u5224\u65adp\u3001q\u7684\u503c\u3002(\u9650\u5b9a\u6ede\u540e\u9636\u657050)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_5F47576585654DCE8",
     "input": [
      "from scipy import  stats\n",
      "import statsmodels.api as sm  # \u7edf\u8ba1\u76f8\u5173\u7684\u5e93\n",
      "import numpy as np\n",
      "import pandas as pd\n",
      "import matplotlib.pyplot as plt\n",
      "\n",
      "IndexData = DataAPI.MktIdxdGet(indexID=u\"\",ticker=u\"000001\",beginDate=u\"20130101\",endDate=u\"20140801\",field=u\"tradeDate,closeIndex,CHGPct\",pandas=\"1\") \n",
      "IndexData = IndexData.set_index(IndexData['tradeDate'])\n",
      "data = np.array(IndexData['CHGPct']) # \u4e0a\u8bc1\u6307\u6570\u65e5\u6da8\u8dcc\n",
      "\n",
      "fig = plt.figure(figsize=(20,10))\n",
      "ax1=fig.add_subplot(211)\n",
      "fig = sm.graphics.tsa.plot_acf(data,lags=30,ax=ax1)\n",
      "ax2 = fig.add_subplot(212)\n",
      "fig = sm.graphics.tsa.plot_pacf(data,lags=30,ax=ax2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_BD985C1EA71A41DF8",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0c\u6a21\u578b\u7684\u9636\u6b21\u5e94\u8be5\u4e3a(27,27)\u3002\u7136\u800c\uff0c\u8fd9\u4e48\u9ad8\u7684\u9636\u6b21\u5efa\u6a21\u7684\u8ba1\u7b97\u91cf\u662f\u5de8\u5927\u7684\u3002\n",
      "\n",
      "\u4e3a\u4ec0\u4e48\u4e0d\u518d\u9650\u5236\u6ede\u540e\u9636\u6570\u5c0f\u4e00\u4e9b\uff1f\u5982\u679clags\u8bbe\u7f6e\u4e3a25\uff0c20\u6216\u8005\u66f4\u5c0f\u65f6\uff0c\u9636\u6570\u4e3a(0,0)\uff0c\u663e\u7136\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u3002\n",
      "\n",
      "\u7efc\u5408\u6765\u770b\uff0c\u7531\u4e8e\u8ba1\u7b97\u91cf\u592a\u5927\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u4f7f\u7528(27,27)\u5efa\u6a21\u4e86\u3002\u91c7\u7528\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u786e\u5b9a\u9636\u6570\u3002"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_0E993663AE5148268",
     "metadata": {},
     "source": [
      "### **1.2 \u4fe1\u606f\u51c6\u5219\u5b9a\u9636** "
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_A508383127B948668",
     "metadata": {},
     "source": [
      "\u5173\u4e8e\u4fe1\u606f\u51c6\u5219\uff0c\u4e0a\u4e00\u671f\u5176\u5b9e\u6709\u8fc7\u4e00\u4e9b\u4ecb\u7ecd\uff1a\n",
      "\n",
      "\u76ee\u524d\u9009\u62e9\u6a21\u578b\u5e38\u7528\u5982\u4e0b\u51c6\u5219\uff1a \uff08\u5176\u4e2dL\u4e3a\u4f3c\u7136\u51fd\u6570\uff0ck\u4e3a\u53c2\u6570\u6570\u91cf\uff0cn\u4e3a\u89c2\u5bdf\u6570\uff09\n",
      "\n",
      "** AIC =  -2 ln(L) + 2 k \u4e2d\u6587\u540d\u5b57\uff1a\u8d64\u6c60\u4fe1\u606f\u91cf akaike information criterion**\n",
      "\n",
      "** BIC =  -2 ln(L) + ln(n)*k \u4e2d\u6587\u540d\u5b57\uff1a\u8d1d\u53f6\u65af\u4fe1\u606f\u91cf bayesian information criterion**\n",
      "\n",
      "** HQ =  -2 ln(L) + ln(ln(n))*k hannan-quinn criterion **\n",
      "\n",
      "\u6211\u4eec\u5e38\u7528\u7684\u662fAIC\u51c6\u5219\uff0cAIC\u9f13\u52b1\u6570\u636e\u62df\u5408\u7684\u4f18\u826f\u6027\u4f46\u662f\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u8fc7\u5ea6\u62df\u5408(Overfitting)\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u4f18\u5148\u8003\u8651\u7684\u6a21\u578b\u5e94\u662fAIC\u503c\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\u6a21\u578b\u3002\n",
      "\n",
      "\u4e0b\u9762\uff0c\u6211\u4eec\u5206\u522b\u5e94\u7528\u4ee5\u4e0a3\u79cd\u6cd5\u5219\uff0c\u4e3a\u6211\u4eec\u7684\u6a21\u578b\u5b9a\u9636\uff0c\u6570\u636e\u4ecd\u7136\u662f\u4e0a\u8bc1\u6307\u6570\u65e5\u6da8\u8dcc\u5e45\u5e8f\u5217\uff1a\n",
      "\n",
      "**\u4e3a\u4e86\u63a7\u5236\u8ba1\u7b97\u91cf\uff0c\u6211\u4eec\u9650\u5236AR\u6700\u5927\u9636\u4e0d\u8d85\u8fc76\uff0cMA\u6700\u5927\u9636\u4e0d\u8d85\u8fc74\u3002** \u4f46\u662f\u8fd9\u6837\u5e26\u6765\u7684\u574f\u5904\u662f\u53ef\u80fd\u4e3a\u5c40\u90e8\u6700\u4f18\u3002"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_2202D5916D324FED8",
     "input": [
      "print \"AIC\", sm.tsa.arma_order_select_ic(data,max_ar=6,max_ma=4,ic='aic')['aic_min_order']  # AIC\n",
      "print \"BIC\", sm.tsa.arma_order_select_ic(data,max_ar=6,max_ma=4,ic='bic')['bic_min_order']  # BIC\n",
      "print \"HQIC\", sm.tsa.arma_order_select_ic(data,max_ar=6,max_ma=4,ic='hqic')['hqic_min_order'] # HQIC"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_47A3689635304DE38",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0cAIC\u6c42\u89e3\u7684\u6a21\u578b\u9636\u6b21\u4e3a(3,3)\u3002\u6211\u4eec\u8fd9\u91cc\u5c31\u4ee5AIC\u51c6\u5219\u4e3a\u51c6\uff0c\u81f3\u4e8e\u5230\u5e95\u54ea\u79cd\u51c6\u5219\u66f4\u597d\uff0c\u8bfb\u8005\u53ef\u4ee5\u5206\u522b\u5efa\u6a21\u8fdb\u884c\u5bf9\u6bd4"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_F8DE84E93DAB4F648",
     "metadata": {},
     "source": [
      "## **1.2 \u6a21\u578b\u7684\u5efa\u7acb\u53ca\u9884\u6d4b**\n",
      "\n",
      "\u6211\u4eec\u4f7f\u7528\u4e0a\u4e00\u8282AIC\u51c6\u5219\u6c42\u89e3\u7684\u6a21\u578b\u9636\u6b21(3,2)\u6765\u5efa\u7acbARMA\u6a21\u578b\uff0c\u6e90\u6570\u636e\u4e3a\u4e0a\u8bc1\u6307\u6570\u65e5\u6da8\u8dcc\u5e45\u6570\u636e\uff0c\u6700\u540e10\u4e2a\u6570\u636e\u7528\u4e8e\u9884\u6d4b\u3002"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_9A3F0464225B47478",
     "input": [
      "order = (3,2)\n",
      "train = data[:-10]\n",
      "test = data[-10:]\n",
      "tempModel = sm.tsa.ARMA(train,order).fit()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_BE53B61C9AD6481F8",
     "metadata": {},
     "source": [
      "\u540c\u6837\u7684\uff0c\u5148\u6765\u770b\u770b\u62df\u5408\u6548\u679c\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_6DF670A77F3544018",
     "input": [
      "delta = tempModel.fittedvalues - train\n",
      "score = 1 - delta.var()/train.var()\n",
      "print score"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_BD630EE3F6BF48038",
     "metadata": {},
     "source": [
      "\u5982\u679c\u5bf9\u6bd4\u4e4b\u524d\u5efa\u7acb\u7684AR\u3001MA\u6a21\u578b\uff0c\u53ef\u4ee5\u53d1\u73b0\u62df\u5408\u7cbe\u5ea6\u4e0a\u6709\u6240\u63d0\u5347\uff0c\u4f46\u4ecd\u7136\u662f\u4e0d\u591f\u770b\u7684\u7ea7\u522b~\n",
      "\n",
      "\u63a5\u7740\u6765\u770b\u9884\u6d4b\u6548\u679c\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_BE16AC1C42ED4A988",
     "input": [
      "predicts = tempModel.predict(371, 380, dynamic=True)\n",
      "print len(predicts)\n",
      "comp = pd.DataFrame()\n",
      "comp['original'] = test\n",
      "comp['predict'] = predicts\n",
      "comp.plot()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_C27BA5A1CB6B49278",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0c\u867d\u7136\u8fd8\u662f\u51c6\u5934\u5f88\u4f4e\uff0c\u4e0d\u8fc7\u76f8\u6bd4\u4e4b\u524d\u7684MA\u6a21\u578b\uff0c\u53ea\u770b\u6da8\u8dcc\u7684\u8bdd\uff0c\u80dc\u7387\u4e3a55.6%\uff0c\u6548\u679c\u8fd8\u662f\u597d\u4e86\u4e0d\u5c11"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_7F5586F660BB43AB8",
     "metadata": {},
     "source": [
      "# **\u4e8c\u3001 ARIMA\u6a21\u578b**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_8DB81E2CFEAC45D78",
     "metadata": {},
     "source": [
      "**\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u7814\u7a76\u7684\u5e8f\u5217\u90fd\u96c6\u4e2d\u5728\u5e73\u7a33\u5e8f\u5217\u3002**\uff0c\u5373ARMA\u6a21\u578b\u7814\u7a76\u7684\u5bf9\u8c61\u4e3a\u5e73\u7a33\u5e8f\u5217\u3002\u5982\u679c\u5e8f\u5217\u662f\u975e\u5e73\u7a33\u7684\uff0c\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528ARIMA\u6a21\u578b\u3002\n",
      "\n",
      "ARIMA\u6bd4ARMA\u4ec5\u591a\u4e86\u4e2a\"I\"\uff0c\u4ee3\u8868\u7740\u5176\u6bd4ARMA\u591a\u4e00\u5c42\u5185\u6db5\uff1a\u4e5f\u5c31\u662f**\u5dee\u5206**\n",
      "\n",
      "**\u4e00\u4e2a\u975e\u5e73\u7a33\u5e8f\u5217\u7ecf\u8fc7d\u6b21\u5dee\u5206\u540e\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5e73\u7a33\u65f6\u95f4\u5e8f\u5217\u3002**d \u5177\u4f53\u7684\u53d6\u503c\uff0c\u6211\u4eec\u5f97\u5206\u88ab\u5bf9\u5dee\u52061\u6b21\u540e\u7684\u5e8f\u5217\u8fdb\u884c\u5e73\u7a33\u6027\u68c0\u9a8c\uff0c\u82e5\u679c\u662f\u975e\u5e73\u7a33\u7684\uff0c\u5219\u7ee7\u7eed\u5dee\u5206\u3002\u76f4\u5230d\u6b21\u540e\u68c0\u9a8c\u4e3a\u5e73\u7a33\u5e8f\u5217\u3002"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_F23EB78B57CE4A208",
     "metadata": {},
     "source": [
      "## ** 2.1 \u5355\u4f4d\u6839\u68c0\u9a8c**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_5DE4FCD90FED4ECC8",
     "metadata": {},
     "source": [
      "ADF\u662f\u4e00\u79cd\u5e38\u7528\u7684\u5355\u4f4d\u6839\u68c0\u9a8c\u65b9\u6cd5\uff0c\u5b83\u7684**\u539f\u5047\u8bbe\u4e3a\u5e8f\u5217\u5177\u6709\u5355\u4f4d\u6839\uff0c\u5373\u975e\u5e73\u7a33**\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5e73\u7a33\u7684\u65f6\u5e8f\u6570\u636e\uff0c\u5c31\u9700\u8981\u5728\u7ed9\u5b9a\u7684\u7f6e\u4fe1\u6c34\u5e73\u4e0a\u663e\u8457\uff0c\u62d2\u7edd\u539f\u5047\u8bbe\u3002\n",
      "\n",
      "\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\uff1a\u6211\u4eec\u5148\u770b\u4e0a\u8bc1\u7efc\u6307\u7684\u65e5\u6307\u6570\u5e8f\u5217\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_625C1C881E674DEA8",
     "input": [
      "data2 = IndexData['closeIndex'] # \u4e0a\u8bc1\u6307\u6570\n",
      "data2.plot(figsize=(15,5))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_580B2ED644A440C88",
     "metadata": {},
     "source": [
      "\u770b\u56fe\u5f62\uff0c\u8fd9\u91cc\u663e\u7136\u662f\u975e\u5e73\u7a33\u7684\u3002\u63a5\u7740\u6211\u4eec\u8fdb\u884cADF\u5355\u4f4d\u6839\u68c0\u9a8c\u3002"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_52670180D8634D358",
     "input": [
      "temp = np.array(data2)\n",
      "t = sm.tsa.stattools.adfuller(temp)  # ADF\u68c0\u9a8c\n",
      "output=pd.DataFrame(index=['Test Statistic Value', \"p-value\", \"Lags Used\", \"Number of Observations Used\",\"Critical Value(1%)\",\"Critical Value(5%)\",\"Critical Value(10%)\"],columns=['value'])\n",
      "output['value']['Test Statistic Value'] = t[0]\n",
      "output['value']['p-value'] = t[1]\n",
      "output['value']['Lags Used'] = t[2]\n",
      "output['value']['Number of Observations Used'] = t[3]\n",
      "output['value']['Critical Value(1%)'] = t[4]['1%']\n",
      "output['value']['Critical Value(5%)'] = t[4]['5%']\n",
      "output['value']['Critical Value(10%)'] = t[4]['10%']\n",
      "output"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_90BE318D64844A878",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0cp-value\u4e3a0.1704489\uff0c\u5927\u4e8e\u663e\u8457\u6027\u6c34\u5e73\u3002\u539f\u5047\u8bbe\uff1a\u5e8f\u5217\u5177\u6709\u5355\u4f4d\u6839\u5373\u975e\u5e73\u7a33\u3002\u4e0d\u80fd\u88ab\u62d2\u7edd\u3002 \u56e0\u6b64\u4e0a\u8bc1\u6307\u6570\u65e5\u6307\u6570\u5e8f\u5217\u4e3a\u975e\u5e73\u7a33\u7684\u3002\n",
      "\n",
      "\u6211\u4eec\u5c06\u5e8f\u5217\u8fdb\u884c1\u6b21\u5dee\u5206\u540e\u518d\u6b21\u68c0\u9a8c\uff01"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_F07EB74A79B944F48",
     "input": [
      "data2Diff = data2.diff()  # \u5dee\u5206\n",
      "data2Diff.plot(figsize=(15,5))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_64805C047C8E402B8",
     "metadata": {},
     "source": [
      "\u4ece\u56fe\u5f62\u6765\u770b\uff0c\u5e8f\u5217\u8fd1\u4f3c\u5e73\u7a33\u5e8f\u5217\uff0c\u6211\u4eec\u6765\u8fdb\u884cADF\u68c0\u9a8c\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_61D9E2EFB03B4AD38",
     "input": [
      "temp = np.array(data2Diff)[1:] # \u5dee\u5206\u540e\u7b2c\u4e00\u4e2a\u503c\u4e3aNaN,\u820d\u53bb\n",
      "t = sm.tsa.stattools.adfuller(temp)  # ADF\u68c0\u9a8c\n",
      "print \"p-value:   \",t[1]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_858564A814B04D3D8",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0cp-value\u975e\u5e38\u63a5\u8fd1\u4e8e0\uff0c\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u56e0\u6b64\uff0c\u8be5\u5e8f\u5217\u4e3a\u5e73\u7a33\u7684\u3002 \n",
      "\n",
      "\u53ef\u89c1\uff0c\u7ecf\u8fc71\u6b21\u5dee\u5206\u540e\u7684\u5e8f\u5217\u662f\u5e73\u7a33\u7684\uff0c\u5bf9\u4e8e\u539f\u5e8f\u5217\uff0c**d\u7684\u53d6\u503c\u4e3a1\u5373\u53ef\u3002**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_D11618A2D67141DB8",
     "metadata": {},
     "source": [
      "## **2.2 ARIMA(p,d,q)\u6a21\u578b\u9636\u6b21\u786e\u5b9a**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_A1C712A7B3E64DD08",
     "metadata": {},
     "source": [
      "\u4e0a\u9762\u4e00\u5c0f\u8282\u6211\u4eec\u786e\u5b9a\u4e86\u5dee\u5206\u6b21\u6570d\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06**\u5dee\u5206\u540e\u7684\u5e8f\u5217\u5efa\u7acbARMA\u6a21\u578b**\u3002\n",
      "\n",
      "\u9996\u5148\uff0c\u6211\u4eec\u8fd8\u662f\u5c1d\u8bd5PACF\u548cACF\u6765\u5224\u65adp\u3001q\u3002"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_3023CBFDDC2F4F748",
     "input": [
      "temp = np.array(data2Diff)[1:] # \u5dee\u5206\u540e\u7b2c\u4e00\u4e2a\u503c\u4e3aNaN,\u820d\u53bb\n",
      "fig = plt.figure(figsize=(20,10))\n",
      "ax1=fig.add_subplot(211)\n",
      "fig = sm.graphics.tsa.plot_acf(temp,lags=30,ax=ax1)\n",
      "ax2 = fig.add_subplot(212)\n",
      "fig = sm.graphics.tsa.plot_pacf(temp,lags=30,ax=ax2)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_7F1E593863234B1A8",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0c\u6a21\u578b\u7684\u9636\u6b21\u4e3a(27,27)\uff0c\u8fd8\u662f\u592a\u9ad8\u4e86\u3002\u5efa\u6a21\u8ba1\u7b97\u4e86\u592a\u5927\u3002\u6211\u4eec\u518d\u770b\u770bAIC\u51c6\u5219"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_975CC3DA007B44478",
     "input": [
      "sm.tsa.arma_order_select_ic(temp,max_ar=6,max_ma=4,ic='aic')['aic_min_order']  # AIC"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_3A373EB134B94E768",
     "metadata": {},
     "source": [
      "\u6839\u636eAIC\u51c6\u5219\uff0c\u5dee\u5206\u540e\u7684\u5e8f\u5217\u7684ARMA\u6a21\u578b\u9636\u6b21\u4e3a(2,2)\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u5efa\u7acb\u7684**ARIMA\u6a21\u578b\u9636\u6b21(p,d,q) = (2,1,2)**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_AC5C30AC7A8548B88",
     "metadata": {},
     "source": [
      "## **2.3 ARIMA\u6a21\u578b\u5efa\u7acb\u53ca\u9884\u6d4b**"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_0D48CA5B559640B78",
     "metadata": {},
     "source": [
      "\u6839\u636e\u4e0a\u4e00\u7ed3\u786e\u5b9a\u7684\u6a21\u578b\u9636\u6b21\uff0c\u6211\u4eec\u5bf9\u5dee\u5206\u540e\u5e8f\u5217\u5efa\u7acbARMA(2,2)\u6a21\u578b\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_00B89D4649EE44898",
     "input": [
      "order = (2,2)\n",
      "data = np.array(data2Diff)[1:] # \u5dee\u5206\u540e\uff0c\u7b2c\u4e00\u4e2a\u503c\u4e3aNaN\n",
      "rawdata = np.array(data2)\n",
      "train = data[:-10]\n",
      "test = data[-10:]\n",
      "model = sm.tsa.ARMA(train,order).fit()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_43776124734C41668",
     "metadata": {},
     "source": [
      "\u6211\u4eec\u5148\u770b\u5dee\u5206\u5e8f\u5217\u7684ARMA\u62df\u5408\u503c\u3002"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_5BAA6B8DF832401A8",
     "input": [
      "plt.figure(figsize=(15,5))\n",
      "plt.plot(model.fittedvalues,label='fitted value')\n",
      "plt.plot(train[1:],label='real value')\n",
      "plt.legend(loc=0)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_AB58FDC1CFF840578",
     "input": [
      "delta = model.fittedvalues - train\n",
      "score = 1 - delta.var()/train[1:].var()\n",
      "print score"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_111679DBD7A446BA8",
     "metadata": {},
     "source": [
      "\u518d\u770b\u5bf9\u5dee\u5206\u5e8f\u5217\u7684\u9884\u6d4b\u60c5\u51b5\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_7645C25E8D9843878",
     "input": [
      "predicts = model.predict(10,381, dynamic=True)[-10:]\n",
      "print len(predicts)\n",
      "comp = pd.DataFrame()\n",
      "comp['original'] = test\n",
      "comp['predict'] = predicts\n",
      "comp.plot(figsize=(8,5))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_97EAAB55C65943788",
     "metadata": {},
     "source": [
      "\u53ef\u4ee5\u770b\u51fa\uff0c\u5dee\u5206\u5e8f\u5217ARMA\u6a21\u578b\u7684\u62df\u5408\u6548\u679c\u548c\u9884\u6d4b\u7ed3\u679c\u5e76\u4e0d\u597d\uff0c\u9884\u6d4b\u503c\u975e\u5e38\u5c0f\uff0c\u8fd9\u4ee3\u8868\u4ec0\u4e48\uff1f\u8fd9\u4ee3\u8868**\u5bf9\u4e8e\u65b0\u7684\u503c\uff0c\u8fd9\u91cc\u8ba4\u4e3a\u5b83\u5f88\u63a5\u8fd1\u4e0a\u4e00\u65f6\u523b\u7684\u503c\u3002**\n",
      "\n",
      "\u8fd9\u4e2a\u5f71\u54cd\u53ef\u80fd\u6765\u81ea\u6a21\u578b\u9636\u6b21\uff0c\u770b\u6765**\u6a21\u578b\u9636\u6b21**\u8fd8\u662f\u5f97\u5c1d\u8bd5\u66f4\u9ad8\u9636\u7684\u3002\u8fd9\u91cc\u5c31\u4e0d\u5efa\u6a21\u4e86\uff0c\uff08\u8ba1\u7b97\u65f6\u95f4\u592a\u957f\uff09\uff0c\u5927\u5bb6\u6709\u5174\u8da3\u53ef\u4ee5\u8bd5\u8bd5\u9ad8\u9636\u7684\u6a21\u578b\u3002\n",
      "\n",
      "\u7136\u540e\u6211\u4eec\u5c06\u9884\u6d4b\u503c\u8fd8\u539f\uff08\u5373\u5728**\u4e0a\u4e00\u65f6\u523b\u6307\u6570\u503c\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u5dee\u5206\u5dee\u503c\u7684\u9884\u4f30**\uff09\uff1a"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "uqer_7A2195B2647A44A58",
     "input": [
      "rec = [rawdata[-11]]\n",
      "pre = model.predict(371, 380, dynamic=True) # \u5dee\u5206\u5e8f\u5217\u7684\u9884\u6d4b\n",
      "for i in range(10):\n",
      "    rec.append(rec[i]+pre[i])\n",
      "plt.figure(figsize=(10,5))\n",
      "plt.plot(rec[-10:],'r',label='predict value')\n",
      "plt.plot(rawdata[-10:],'blue',label='real value')    \n",
      "plt.legend(loc=0)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "id": "uqer_13646755E47E45628",
     "metadata": {},
     "source": [
      "\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8e\u5bf9\u5dee\u5206\u5e8f\u5217\u7684\u9884\u6d4b\u5f88\u5dee\uff0c\u8fd8\u539f\u5230\u539f\u5e8f\u5217\u540e\uff0c\u9884\u6d4b\u503c\u51e0\u4e4e\u5728\u9884\u6d4b\u524d\u4e00\u4e2a\u503c\u4e0a\u5c0f\u5e45\u6ce2\u52a8\u3002 \u4ecd\u7136\u662f\u6a21\u578b\u4e0d\u591f\u597d\u3002\u7ed3\u679c\u4e0d\u91cd\u8981\uff0c\u65b9\u6cd5\u5df2\u7ecf\u5199\u51fa\u6765\u4e86"
     ]
    },
    {
     "cell_type": "markdown",
     "id": "uqer_937555A47AA543018",
     "metadata": {},
     "source": [
      "## \u53c2\u8003\u6587\u732e\n",
      "1.\u300a\u91d1\u878d\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u300b \u7b2c2\u7248 Ruey S.Tsay\u8457 \u738b\u8f89\u3001\u6f58\u5bb6\u67f1 \u8bd1<br>\n",
      "2.Time Series analysis tsa  [http://nipy.bic.berkeley.edu/nightly/statsmodels/doc/html/tsa.html](http://nipy.bic.berkeley.edu/nightly/statsmodels/doc/html/tsa.html)"
     ]
    }
   ],
   "metadata": {}
  }
 ]
}